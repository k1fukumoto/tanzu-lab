import os

env=Environment()

env['ENV']['PATH'] = ':'.join([env['ENV']['PATH'],
                              '/sbin','/usr/local/go/bin'])

def Wget(target,url_prefix):
  return env.Command(target,[],'wget -P cli-tools {}/{}'.format(url_prefix,target))
def Targz(target,source):
  return env.Command(target,source,'tar -C cli-tools -zxf cli-tools/{}'.format(source))
def Install(target,source):
  return env.Command(target,source,
                     [Copy("$TARGET","$SOURCE"),Chmod("$TARGET",755)])

def install_gcc():
  c = env.Command('/usr/bin/gcc',[],'apt autoremove -y gcc; apt install -y gcc')
  env.Alias('gcc','/usr/bin/gcc')
    
def install_go():
  c = Wget('go1.13.linux-amd64.tar.gz','https://dl.google.com/go')
  c = env.Command('/usr/local/go/bin/go','go1.13.linux-amd64.tar.gz',
                  'tar -C /usr/local -xzf cli-tools/go1.13.linux-amd64.tar.gz')
  env.Alias('go','/usr/local/go/bin/go')

def install_kind():
  h = os.environ['HOME']
  t = '{}/go/bin/kind'.format(h)
  c = env.Command(t,[],('GO111MODULE=on GOCACHE=/tmp/gocache GOPATH={}/go '+ \
                        'go get sigs.k8s.io/kind@v0.5.1').format(h))
  env.Alias('kind',t)

def install_clusterctl():
  c = Wget('clusterctl-linux-amd64',
           'https://github.com/kubernetes-sigs/cluster-api/releases/download/v0.2.1')
  c = Install('/usr/local/bin/clusterctl','clusterctl-linux-amd64')
  env.Alias('clusterctl','/usr/local/bin/clusterctl')

def install_kubectl():
  c = Wget('kubectl',
           'https://storage.googleapis.com/kubernetes-release/release/v1.16.1/bin/linux/amd64')
  c = Install('/usr/local/bin/kubectl','kubectl')
  env.Alias('kubectl','/usr/local/bin/kubectl')

def install_docker():
  c = env.Command('/usr/bin/docker',[],'./install_docker.sh')
  env.Alias('docker','/usr/bin/docker')

def install_helm():
  c = Wget('helm-v2.14.3-linux-amd64.tar.gz','https://get.helm.sh')
  c = Targz('linux-amd64/helm','helm-v2.14.3-linux-amd64.tar.gz')
  Clean(c,'linux-amd64/')
  c = Install('/usr/local/bin/helm','linux-amd64/helm')
  env.Alias('helm','/usr/local/bin/helm')

def install_mc():
  c = Wget('mc','https://dl.min.io/client/mc/release/linux-amd64')
  c = Install('/usr/local/bin/mc','mc')
  env.Alias('mc','/usr/local/bin/mc')

def install_velero():
  c = Wget('velero-v1.1.0-linux-amd64.tar.gz',
           'https://github.com/vmware-tanzu/velero/releases/download/v1.1.0')
  c = Targz('velero-v1.1.0-linux-amd64/velero',
            'velero-v1.1.0-linux-amd64.tar.gz')
  Clean(c,'velero-v1.1.0-linux-amd64/')
  c = Install('/usr/local/bin/velero','velero-v1.1.0-linux-amd64/velero')
  env.Alias('velero','/usr/local/bin/velero')
    
install_gcc()
install_docker()
install_go()
install_kind()
install_clusterctl()
install_kubectl()

install_helm()
install_mc()
install_velero()

env.Alias('cli-tools',['gcc','docker','go','kind','clusterctl','kubectl',
          'helm','mc','velero'])

env.Default('cli-tools')
